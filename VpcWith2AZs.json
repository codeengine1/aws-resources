{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "VPC with 2 Availability zones",
  "Parameters": {
	"KeyName" : {
	  "Description": "Amazon EC2 Key Pair Name",
	  "Type": "AWS::EC2::KeyPair::KeyName",
	  "Default": "id_rsa"
	},
	"BastionAccessIP" : {
	  "Description": "IP with access to bastion host",
	  "Type": "String",
	  "Default": "104.228.236.165/32"
	},
	"VPCName": {
	  "Description": "Whatever you'd like to name your VPC",
	  "Type": "String",
	  "Default": "DaveMapleVPC"
	},
	"VPCCIDR": {
	  "Description": "CIDR Block for VPC",
	  "Type": "String",
	  "Default": "10.0.0.0/16",
	  "AllowedValues": [
		"10.0.0.0/16"
	  ]
	},
	"PublicSubnet1Param": {
	  "Description": "Public Subnet 1",
	  "Type": "String",
	  "Default": "10.0.0.0/24",
	  "AllowedValues": [
		"10.0.0.0/24"
	  ]
	},
	"PublicSubnet2Param": {
	  "Description": "Public Subnet 2",
	  "Type": "String",
	  "Default": "10.0.1.0/24",
	  "AllowedValues": [
		"10.0.1.0/24"
	  ]
	},
	"PrivateSubnet1Param": {
	  "Description": "Private Subnet 1",
	  "Type": "String",
	  "Default": "10.0.10.0/24",
	  "AllowedValues": [
		"10.0.10.0/24"
	  ]
	},
	"PrivateSubnet2Param": {
	  "Description": "Private Subnet 2",
	  "Type": "String",
	  "Default": "10.0.11.0/24",
	  "AllowedValues": [
		"10.0.11.0/24"
	  ]
	}
  },
  "Mappings": {
	"RegionToNATAMI": {
	  "us-east-1": {
		"AMI": "ami-b0210ed8"
	  }
	},
	"RegionToBastionAMI": {
	  "us-east-1": {
		"AMI": "ami-60b6c60a"
	  }
	}
  },
  "Resources": {
	"VPC": {
	  "Type": "AWS::EC2::VPC",
	  "Properties": {
		"CidrBlock": {
		  "Ref": "VPCCIDR"
		},
		"Tags": [
		  {
			"Key": "VPC",
			"Value": {"Ref": "VPCName"}
		  },
		  {
			"Key": "Name",
			"Value": {"Ref": "VPCName"}
		  }
		]
	  }
	},
	"PublicSubnet1": {
	  "Type": "AWS::EC2::Subnet",
	  "DependsOn": ["VPC", "AttachGateway"],
	  "Properties": {
		"VpcId": {"Ref": "VPC"},
		"CidrBlock": {"Ref": "PublicSubnet1Param"},
		"AvailabilityZone": {
		  "Fn::Select": [
			"0",
			{
			  "Fn::GetAZs": ""
			}
		  ]
		},
		"Tags": [
		  {
			"Key": "Name",
			"Value": "Public Subnet 1"
		  }
		]
	  }
	},
	"PublicSubnet2": {
	  "Type": "AWS::EC2::Subnet",
	  "DependsOn": ["VPC", "AttachGateway"],
	  "Properties": {
		"VpcId": {"Ref": "VPC"},
		"CidrBlock": {"Ref": "PublicSubnet2Param"},
		"AvailabilityZone": {
		  "Fn::Select": [
			"1",
			{
			  "Fn::GetAZs": ""
			}
		  ]
		},
		"Tags": [
		  {
			"Key": "Name",
			"Value": "Public Subnet 2"
		  }
		]
	  }
	},
	"PrivateSubnet1": {
	  "Type": "AWS::EC2::Subnet",
	  "DependsOn": ["VPC", "AttachGateway"],
	  "Properties": {
		"VpcId": {"Ref": "VPC"},
		"CidrBlock": {"Ref": "PrivateSubnet1Param"},
		"AvailabilityZone": {
		  "Fn::Select": [
			"0",
			{
			  "Fn::GetAZs": ""
			}
		  ]
		},
		"Tags": [
		  {
			"Key": "Name",
			"Value": "Private Subnet 1"
		  }
		]
	  }
	},
	"PrivateSubnet2": {
	  "Type": "AWS::EC2::Subnet",
	  "DependsOn": ["VPC", "AttachGateway"],
	  "Properties": {
		"VpcId": {"Ref": "VPC"},
		"CidrBlock": {"Ref": "PrivateSubnet2Param"},
		"AvailabilityZone": {
		  "Fn::Select": [
			"1",
			{
			  "Fn::GetAZs": ""
			}
		  ]
		},
		"Tags": [
		  {
			"Key": "Name",
			"Value": "Private Subnet 2"
		  }
		]
	  }
	},
	"InternetGateway": {
	  "Type": "AWS::EC2::InternetGateway",
	  "DependsOn": "VPC"
	},
	"AttachGateway": {
	  "Type": "AWS::EC2::VPCGatewayAttachment",
	  "DependsOn": ["VPC", "InternetGateway"],
	  "Properties": {
		"VpcId": {"Ref": "VPC"},
		"InternetGatewayId": {"Ref": "InternetGateway"}
	  }
	},
	"PublicRouteTable": {
	  "Type": "AWS::EC2::RouteTable",
	  "DependsOn": ["VPC", "AttachGateway"],
	  "Properties": {
		"VpcId": {"Ref": "VPC"},
		"Tags": [
		  {
			"Key": "Name",
			"Value": "Public"
		  }
		]
	  }
	},
	"PublicRoute": {
	  "Type": "AWS::EC2::Route",
	  "DependsOn": "PublicRouteTable",
	  "Properties": {
		"RouteTableId": {"Ref": "PublicRouteTable"},
		"DestinationCidrBlock": "0.0.0.0/0",
		"GatewayId": {"Ref": "InternetGateway"}
	  }
	},
	"PublicSubnet1RouteTableAssociation": {
	  "Type": "AWS::EC2::SubnetRouteTableAssociation",
	  "DependsOn": ["PublicRouteTable", "PublicSubnet1"],
	  "Properties": {
		"SubnetId": {"Ref": "PublicSubnet1"},
		"RouteTableId": {"Ref": "PublicRouteTable"}
	  }
	},
	"PublicSubnet2RouteTableAssociation": {
	  "Type": "AWS::EC2::SubnetRouteTableAssociation",
	  "DependsOn": ["PublicRouteTable", "PublicSubnet2"],
	  "Properties": {
		"SubnetId": {"Ref": "PublicSubnet2"},
		"RouteTableId": {"Ref": "PublicRouteTable"}
	  }
	},
	"PrivateRouteTable": {
	  "Type": "AWS::EC2::RouteTable",
	  "DependsOn": "VPC",
	  "Properties": {
		"VpcId": {"Ref": "VPC"},
		"Tags": [
		  {
			"Key": "Name",
			"Value": "Private"
		  }
		]
	  }
	},
	"PrivateSubnet1RouteTableAssociation": {
	  "Type": "AWS::EC2::SubnetRouteTableAssociation",
	  "DependsOn": ["PublicRouteTable", "PrivateSubnet1"],
	  "Properties": {
		"SubnetId": {"Ref": "PrivateSubnet1"},
		"RouteTableId": {"Ref": "PrivateRouteTable"}
	  }
	},
	"PrivateSubnet2RouteTableAssociation": {
	  "Type": "AWS::EC2::SubnetRouteTableAssociation",
	  "DependsOn": ["PublicRouteTable", "PrivateSubnet2"],
	  "Properties": {
		"SubnetId": {"Ref": "PrivateSubnet2"},
		"RouteTableId": {"Ref": "PrivateRouteTable"}
	  }
	},
	"PrivateNetworkAcl": {
	  "Type": "AWS::EC2::NetworkAcl",
	  "DependsOn": "VPC",
	  "Properties": {
		"VpcId": {"Ref": "VPC"},
		"Tags": [
		  {
			"Key": "Network",
			"Value": "Private"
		  }
		]
	  }
	},
	"WaitHandle01": {
	  "Type": "AWS::CloudFormation::WaitConditionHandle",
	  "Properties": {}
	},
	"WaitCondition01": {
	  "Type": "AWS::CloudFormation::WaitCondition",
	  "DependsOn": ["NATInstance", "WaitHandle01"],
	  "Properties": {
		"Handle": {
		  "Ref": "WaitHandle01"
		},
		"Timeout": "900"
	  }
	},
	"NATInstance": {
	  "Type": "AWS::EC2::Instance",
	  "DependsOn": ["VPC", "AttachGateway", "PublicSubnet1", "NATSecurityGroup"],
	  "Properties": {
		"KeyName" : { "Ref" : "KeyName" },
		"ImageId": {
		  "Fn::FindInMap": [
			"RegionToNATAMI",
			{
			  "Ref": "AWS::Region"
			},
			"AMI"
		  ]
		},
		"InstanceType": "t2.micro",
		"NetworkInterfaces": [
		  {
			"DeviceIndex": "0",
			"AssociatePublicIpAddress": "true",
			"SubnetId": {"Ref": "PublicSubnet1"},
			"GroupSet": [{"Ref": "NATSecurityGroup"}
			]
		  }
		],
		"SourceDestCheck": "false",
		"Tags": [
		  {
			"Key": "Name",
			"Value": "NAT"
		  }
		],
		"UserData": {
		  "Fn::Base64": {
			"Fn::Join": [
			  "",
			  [
				"#!/bin/bash\n",
				"EOF\n",
				"/opt/aws/bin/cfn-signal -s true '",
				{
				  "Ref": "WaitHandle01"
				},
				"'\n"
			  ]
			]
		  }
		}
	  }
	},
	"BastionInstance": {
	  "Type": "AWS::EC2::Instance",
	  "DependsOn": ["VPC", "AttachGateway", "PublicSubnet2", "BastionSecurityGroup"],
	  "Properties": {
		"KeyName" : { "Ref" : "KeyName" },
		"ImageId": {
		  "Fn::FindInMap": [
			"RegionToBastionAMI",
			{
			  "Ref": "AWS::Region"
			},
			"AMI"
		  ]
		},
		"InstanceType": "t2.micro",
		"NetworkInterfaces": [
		  {
			"DeviceIndex": "0",
			"AssociatePublicIpAddress": "true",
			"SubnetId": {"Ref": "PublicSubnet2"},
			"GroupSet": [{"Ref": "BastionSecurityGroup"}
			]
		  }
		],
		"SourceDestCheck": "false",
		"Tags": [
		  {
			"Key": "Name",
			"Value": "Bastion"
		  }
		]
	  }
	},
	"NATSecurityGroup": {
	  "Type": "AWS::EC2::SecurityGroup",
	  "DependsOn": ["VPC", "AttachGateway"],
	  "Properties": {
		"GroupDescription": "Enable internal access to the NAT device",
		"VpcId": {"Ref": "VPC"},
		"SecurityGroupIngress": [
		  {
			"IpProtocol": "tcp",
			"FromPort": "0",
			"ToPort": "1024",
			"CidrIp": {"Ref": "PrivateSubnet1Param"}
		  },
		  {
			"IpProtocol": "udp",
			"FromPort": "0",
			"ToPort": "1024",
			"CidrIp": {"Ref": "PrivateSubnet1Param"}
		  },
		  {
			"IpProtocol": "tcp",
			"FromPort": "0",
			"ToPort": "1024",
			"CidrIp": {"Ref": "PrivateSubnet2Param"}
		  },
		  {
			"IpProtocol": "udp",
			"FromPort": "0",
			"ToPort": "1024",
			"CidrIp": {"Ref": "PrivateSubnet2Param"}
		  }
		],
		"SecurityGroupEgress": [
		  {
			"IpProtocol": "tcp",
			"FromPort": "0",
			"ToPort": "65535",
			"CidrIp": "0.0.0.0/0"
		  },
		  {
			"IpProtocol": "udp",
			"FromPort": "0",
			"ToPort": "65535",
			"CidrIp": "0.0.0.0/0"
		  }
		]
	  }
	},
	"PrivateRoute": {
	  "Type": "AWS::EC2::Route",
	  "DependsOn": ["NATInstance", "PrivateRouteTable", "AttachGateway", "VPC"],
	  "Properties": {
		"RouteTableId": {"Ref": "PrivateRouteTable"},
		"DestinationCidrBlock": "0.0.0.0/0",
		"InstanceId": {"Ref": "NATInstance"}
	  }
	},
	"WebAppSecurityGroup": {
	  "Type": "AWS::EC2::SecurityGroup",
	  "DependsOn": ["VPC", "AttachGateway", "ELBSecurityGroup"],
	  "Properties": {
		"GroupDescription": "Security Group For AutoScaling WebApp Servers",
		"VpcId": {"Ref": "VPC"},
		"SecurityGroupIngress": [
		  {
			"IpProtocol": "tcp",
			"FromPort": "80",
			"ToPort": "80",
			"SourceSecurityGroupId": {"Ref": "ELBSecurityGroup"}
		  },
		  {
			"IpProtocol": "tcp",
			"FromPort": "443",
			"ToPort": "443",
			"SourceSecurityGroupId": {"Ref": "ELBSecurityGroup"}
		  },
		  {
			"IpProtocol": "tcp",
			"FromPort": "22",
			"ToPort": "22",
			"SourceSecurityGroupId": {"Ref": "BastionSecurityGroup"}
		  }
		]
	  }
	},
	"ELBSecurityGroup": {
	  "Type": "AWS::EC2::SecurityGroup",
	  "DependsOn": ["VPC", "AttachGateway"],
	  "Properties": {
		"GroupDescription": "Security Group for ELB",
		"VpcId": {"Ref": "VPC"},
		"SecurityGroupIngress": [
		  {
			"IpProtocol": "tcp",
			"FromPort": "80",
			"ToPort": "80",
			"CidrIp": "0.0.0.0/0"
		  },
		  {
			"IpProtocol": "tcp",
			"FromPort": "443",
			"ToPort": "443",
			"CidrIp": "0.0.0.0/0"
		  }
		]
	  }
	},
	"BastionSecurityGroup": {
	  "Type": "AWS::EC2::SecurityGroup",
	  "DependsOn": ["VPC", "AttachGateway"],
	  "Properties": {
		"GroupDescription": "Security Group for Bastion host",
		"VpcId": {"Ref": "VPC"},
		"SecurityGroupIngress": [
		  {
			"IpProtocol": "tcp",
			"FromPort": "22",
			"ToPort": "22",
			"CidrIp": {"Ref": "BastionAccessIP"}
		  }
		]
	  }
	}
  }
}